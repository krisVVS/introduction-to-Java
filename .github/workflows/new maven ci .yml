name: Maven CI Pipeline

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Install Maven 3.9.9
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://dlcdn.apache.org/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.tar.gz
          tar -xvzf apache-maven-3.9.9-bin.tar.gz
          sudo mv apache-maven-3.9.9 /opt/maven
          echo "export PATH=/opt/maven/bin:$PATH" >> $GITHUB_ENV

      - name: Verify Maven Installation
        run: mvn -version

      - name: Build project
        run: mvn clean compile

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Install Maven 3.9.9
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://dlcdn.apache.org/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.tar.gz
          tar -xvzf apache-maven-3.9.9-bin.tar.gz
          sudo mv apache-maven-3.9.9 /opt/maven
          echo "export PATH=/opt/maven/bin:$PATH" >> $GITHUB_ENV

      - name: Verify Maven Installation
        run: mvn -version

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install Xvfb (Fix for No X11 DISPLAY)
        run: sudo apt-get install -y xvfb

      - name: Start Xvfb
        run: Xvfb :99 -screen 0 1920x1080x24 & disown
        shell: bash

      - name: Set DISPLAY variable
        run: echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Run tests with Headless Mode
        run: mvn test -Djava.awt.headless=true

  quality:
    name: Quality Check
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Install Maven 3.9.9
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://dlcdn.apache.org/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.tar.gz
          tar -xvzf apache-maven-3.9.9-bin.tar.gz
          sudo mv apache-maven-3.9.9 /opt/maven
          echo "export PATH=/opt/maven/bin:$PATH" >> $GITHUB_ENV

      - name: Verify Maven Installation
        run: mvn -version

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run CheckStyle
        run: mvn checkstyle:check
